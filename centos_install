# all of these commands should be run as root (except obviously when you change to the user)
yum install epel-release -y
yum update -y
reboot now

yum-config-manager --add-repo http://www.nasm.us/nasm.repo
yum install autoconf automake bzip2 cmake freetype-devel gcc gcc-c++ libtool make mercurial nasm pkgconfig zlib-devel fdk-aac-devel cracklib-devel lame gmp-devel -y

rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro

rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm
yum install ffmpeg-devel nodejs git yasm postgresql curl ssmtp -y

cd /usr/src

curl -L http://sourceforge.net/projects/lame/files/lame/3.99/lame-3.99.5.tar.gz | tar -xzf-
cd lame-3.99.5/

./configure && make && make install

cd /usr/src

git clone --depth 1 http://git.videolan.org/git/x264
cd x264
./configure --enable-shared && make && make install && ldconfig
make && make install && ldconfig


cd /usr/src

git clone https://github.com/mstorsjo/fdk-aac.git
cd fdk-aac
./autogen.sh && ./configure --enable-shared --enable-static && ldconfig


git clone git://source.ffmpeg.org/ffmpeg.git
cd ffmpeg
git remote update origin
ffmpeg=2.8.x && ffmpeg=`git describe --abbrev=0 origin/release/${ffmpeg%.x}` && ffmpeg=${ffmpeg#u} && git checkout $ffmpeg
./configure --enable-gpl --enable-version3 --enable-nonfree --enable-libx264 --enable-libfdk-aac --enable-libmp3lame 
make && make install

wget -qO- https://get.docker.com/ | sh
usermod -aG docker <USER>

systemctl restart docker

cd /usr/src

wget https://downloads.haskell.org/~ghc/7.10.3/ghc-7.10.3b-x86_64-deb8-linux.tar.xz && tar -xvf ghc-7.10.3b-x86_64-deb8-linux.tar.xz
cd ghc-7.10.3 && ./configure && sudo make install

echo "export PATH=$PATH:/usr/local/bin" >> ~/.bashrc 
source ~/.bashrc

cd /usr/src

# cabal
wget https://www.haskell.org/cabal/release/cabal-install-1.24.0.2/cabal-install-1.24.0.2.tar.gz && tar -xvf cabal-install-1.24.0.2.tar.gz
cd cabal-install-1.24.0.2 && EXTRA_CONFIGURE_OPTS= ./bootstrap.sh --global

cabal update

su - <USER>

mkdir ~/src && cd ~/src && git clone git://github.com/databrary/databrary

cd ~/src/databrary/Docker
# persist postgres data backing
docker volume create --name databrary_postgres_store
docker build -t databrary_postgres postgres/
docker run -d -v databrary_postgres_store:/var/lib/postgresql/data -p 5432:5432 --rm --name databrary_postgres databrary_postgres
# create databrary user with password databrary123
# postgres password is mysecretpassword (set in docker build)
./wait-for-postgres.sh localhost "docker exec databrary_postgres /usr/local/src/databrary/init-user-db.sh"
./wait-for-postgres.sh localhost "docker exec databrary_postgres /usr/local/src/databrary/remove-superuser-db.sh"

# persist solr data backing
docker volume create --name databrary_solr_store
docker build -t databrary_solr solr/
docker run -d -v databrary_solr_store:/opt/solr -p 8983:8983 --rm --name databrary_solr databrary_solr
# create databrary core
./wait-for-solr.sh localhost "docker exec databrary_solr solr create -c databrary_core -d /databrary_conf"

cd ~/src/databrary
cabal update
cabal sandbox init
# parser dependency
cabal install happy --force-reinstalls
cabal install --only-dependencies --force-reinstalls

cabal configure

cp example.conf databrary.conf

yes | cabal install 
# you will need to restart docker every time the computer restarts (or figure how to auto start docker daemon).
